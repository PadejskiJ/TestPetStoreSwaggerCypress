{
  "stats": {
    "suites": 3,
    "tests": 15,
    "passes": 13,
    "pending": 0,
    "failures": 2,
    "start": "2022-11-28T12:22:27.087Z",
    "end": "2022-11-28T12:22:34.032Z",
    "duration": 6945,
    "testsRegistered": 15,
    "passPercent": 86.66666666666667,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "46a2bfb7-f6fa-4419-8e4e-2b320a4d4446",
      "title": "",
      "fullFile": "cypress\\e2e\\TestPetStore.spec.cy.ts",
      "file": "cypress\\e2e\\TestPetStore.spec.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
          "title": "testing pet store api / pets",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "get inventory and check how many pets with status available are there",
              "fullTitle": "testing pet store api / pets get inventory and check how many pets with status available are there",
              "timedOut": null,
              "duration": 858,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"https://petstore.swagger.io/v2/store/inventory\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    cy.log(response.body.available);\n});",
              "err": {},
              "uuid": "8af41fea-c822-4c6a-ad80-477b5b11d12a",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "post - add new pet to the store, and check if pet is created",
              "fullTitle": "testing pet store api / pets post - add new pet to the store, and check if pet is created",
              "timedOut": null,
              "duration": 310,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"POST\",\n    url: \"https://petstore.swagger.io/v2/pet\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n    body: {\n        id: 111,\n        category: {\n            id: 0,\n            name: \"dog\",\n        },\n        name: \"leksi\",\n        photoUrls: [\"string\"],\n        tags: [\n            {\n                id: 0,\n                name: \"dog\",\n            },\n        ],\n        status: \"available\",\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    cy.request({\n        method: \"GET\",\n        url: \"https://petstore.swagger.io/v2/pet/111\",\n        headers: {\n            Authorisation: \"special-key\",\n        },\n    }).then(function (response) {\n        expect(response.status).equal(200);\n        cy.log(response.body.name);\n    });\n});",
              "err": {},
              "uuid": "c389bd27-ce0b-42b0-a83b-49ad56ac6e83",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "put - update an existing pet in the store, and check if pet status is updated",
              "fullTitle": "testing pet store api / pets put - update an existing pet in the store, and check if pet status is updated",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"PUT\",\n    url: \"https://petstore.swagger.io/v2/pet\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n    body: {\n        id: 111,\n        category: {\n            id: 101,\n            name: \"doggie\",\n        },\n        name: \"Leksi\",\n        photoUrls: [\"string\"],\n        tags: [\n            {\n                id: 1,\n                name: \"dog\",\n            },\n        ],\n        status: \"sold\",\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    expect(response.body.status).to.equal(\"sold\");\n});",
              "err": {},
              "uuid": "f4054b91-3e01-4fc7-aa02-551314b447eb",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get - find pets by status, and check their number",
              "fullTitle": "testing pet store api / pets get - find pets by status, and check their number",
              "timedOut": null,
              "duration": 768,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"http://petstore.swagger.io/v2/pet/findByStatus?status=pending\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    cy.log(response.body[0].id);\n});",
              "err": {},
              "uuid": "89be417f-6234-414b-9a66-eca758aa5735",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get - finds pet by id, and check if its the right pet by name ",
              "fullTitle": "testing pet store api / pets get - finds pet by id, and check if its the right pet by name ",
              "timedOut": null,
              "duration": 553,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"http://petstore.swagger.io/v2/pet/111\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    expect(response.body.name).equal(\"Leksi\");\n});",
              "err": {},
              "uuid": "8837f008-170b-4877-9fd8-389cccda2894",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete - deletes a pet from the store, and check if the pet is deleted",
              "fullTitle": "testing pet store api / pets delete - deletes a pet from the store, and check if the pet is deleted",
              "timedOut": null,
              "duration": 751,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"DELETE\",\n    url: \"https://petstore.swagger.io/v2/pet/111\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n    body: {\n        id: 111,\n        category: {\n            id: 101,\n            name: \"dog\",\n        },\n        name: \"leksi\",\n        photoUrls: [\"string\"],\n        tags: [\n            {\n                id: 1,\n                name: \"dog\",\n            },\n        ],\n        status: \"sold\",\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    cy.request({\n        method: \"GET\",\n        url: \"http://petstore.swagger.io/v2/pet/111\",\n        failOnStatusCode: false,\n        headers: {\n            Authorisation: \"special-key\",\n        },\n    }).then(function (response) {\n        expect(response.status).to.equal(404);\n    });\n});",
              "err": {},
              "uuid": "cca10908-2e7e-4f34-83b8-22cb66165f8f",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test - check inventory before and after pet is added",
              "fullTitle": "testing pet store api / pets test - check inventory before and after pet is added",
              "timedOut": null,
              "duration": 470,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"https://petstore.swagger.io/v2/store/inventory\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    cy.log(JSON.stringify(response));\n    var petsAvailable = response.body.available;\n    cy.log(petsAvailable);\n    cy.request({\n        method: \"POST\",\n        url: \"https://petstore.swagger.io/v2/pet\",\n        headers: {\n            Authorisation: \"special-key\",\n        },\n        body: {\n            id: null,\n            category: {\n                id: 0,\n                name: \"dog\",\n            },\n            name: \"leksi\",\n            tags: [\n                {\n                    id: 1,\n                    name: \"dog\",\n                },\n            ],\n            status: \"available\",\n        },\n    }).then(function () {\n        cy.request({\n            method: \"GET\",\n            url: \"https://petstore.swagger.io/v2/store/inventory\",\n            headers: {\n                Authorisation: \"special-key\",\n            },\n        }).then(function (response) {\n            expect(response.status).equal(200);\n            var petsAvailable2 = response.body.available;\n            cy.log(petsAvailable2);\n            expect(petsAvailable2).to.equal(petsAvailable + 1);\n        });\n    });\n});",
              "err": {},
              "uuid": "14687554-7e75-4ab6-935e-1ab1ea58a062",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test - check pet status before and after pet is sold",
              "fullTitle": "testing pet store api / pets test - check pet status before and after pet is sold",
              "timedOut": null,
              "duration": 430,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//adding a dog \"Max\" to the store\ncy.request({\n    method: \"POST\",\n    url: \"https://petstore.swagger.io/v2/pet\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n    body: {\n        id: 1111,\n        category: {\n            id: 0,\n            name: \"dog\",\n        },\n        name: \"Max\",\n        photoUrls: [\"string\"],\n        tags: [\n            {\n                id: 0,\n                name: \"dog\",\n            },\n        ],\n        status: \"available\",\n    },\n}).then(function (response) {\n    // cheking dogs status\n    expect(response.body.status).to.equal(\"available\");\n    cy.log(JSON.stringify(response));\n    // selling the dog - changing dogs status\n    cy.request({\n        method: \"POST\",\n        url: \"https://petstore.swagger.io/v2/pet\",\n        headers: {\n            Authorisation: \"special-key\",\n        },\n        body: {\n            id: 1111,\n            category: {\n                id: 0,\n                name: \"dog\",\n            },\n            name: \"Max\",\n            tags: [\n                {\n                    id: 0,\n                    name: \"dog\",\n                },\n            ],\n            status: \"sold\",\n        },\n    }).then(function () {\n        // cheking dogs status\n        cy.request({\n            method: \"GET\",\n            url: \"https://petstore.swagger.io/v2/pet/1111\",\n            headers: {\n                Authorisation: \"special-key\",\n            },\n        }).then(function (response) {\n            expect(response.body.status).to.equal(\"sold\");\n        });\n    });\n});",
              "err": {},
              "uuid": "fafde772-3813-40f2-82bd-179ba4027213",
              "parentUUID": "a7ee54b2-82de-4db5-bd6f-78018a1dd3fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8af41fea-c822-4c6a-ad80-477b5b11d12a",
            "c389bd27-ce0b-42b0-a83b-49ad56ac6e83",
            "f4054b91-3e01-4fc7-aa02-551314b447eb",
            "89be417f-6234-414b-9a66-eca758aa5735",
            "8837f008-170b-4877-9fd8-389cccda2894",
            "cca10908-2e7e-4f34-83b8-22cb66165f8f",
            "14687554-7e75-4ab6-935e-1ab1ea58a062",
            "fafde772-3813-40f2-82bd-179ba4027213"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8eab3d35-d071-4aa2-acc2-01b2bc1b7bcd",
          "title": "testing pet store api / users",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test - create user in the store, and verify user is created by finding user by username",
              "fullTitle": "testing pet store api / users test - create user in the store, and verify user is created by finding user by username",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"POST\",\n    url: \"https://petstore.swagger.io/v2/user\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n    body: {\n        id: 9,\n        username: \"jeca\",\n        firstName: \"jelena\",\n        lastName: \"tester\",\n        email: \"jelenat@example.com\",\n        password: \"pet\",\n        phone: \"0123456\",\n        userStatus: 2,\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    cy.request({\n        method: \"GET\",\n        url: \"https://petstore.swagger.io/v2/user/jeca\",\n        headers: {\n            Authorisation: \"special-key\",\n        },\n    }).then(function (response) {\n        expect(response.body.username).equal(\"jeca\");\n    });\n});",
              "err": {},
              "uuid": "f334ffa7-c9e0-4957-b248-68ea4641a1c4",
              "parentUUID": "8eab3d35-d071-4aa2-acc2-01b2bc1b7bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test - check if user can login with valid credentials",
              "fullTitle": "testing pet store api / users test - check if user can login with valid credentials",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"https://petstore.swagger.io/v2/user/login?username=jeca&password=pet'\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    cy.log(response.body.message);\n    expect(response.status).equal(200);\n});",
              "err": {},
              "uuid": "57343d7d-1e4e-4515-bc6a-821fbff4186f",
              "parentUUID": "8eab3d35-d071-4aa2-acc2-01b2bc1b7bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test - check if user can login with invalid credentials",
              "fullTitle": "testing pet store api / users test - check if user can login with invalid credentials",
              "timedOut": null,
              "duration": 657,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"https://petstore.swagger.io/v2/user/login?username=jeca&password=hmmmmm'\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    cy.log(response.body.message);\n    expect(response.status).equal(400);\n    expect(response.statusText).equal(\"Invalid username/password supplied\");\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.eval (webpack:///./cypress/e2e/TestPetStore.spec.cy.ts:308:30)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "84cee931-16f5-4ba7-aa7e-5a729e4a6632",
              "parentUUID": "8eab3d35-d071-4aa2-acc2-01b2bc1b7bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test - check if user can login with empty credentials",
              "fullTitle": "testing pet store api / users test - check if user can login with empty credentials",
              "timedOut": null,
              "duration": 539,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"https://petstore.swagger.io/v2/user/login?username=null&password=null'\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    cy.log(response.body.message);\n    expect(response.status).equal(400);\n    expect(response.statusText).equal(\"Invalid username/password supplied\");\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 400",
                "estack": "AssertionError: expected 200 to equal 400\n    at Context.eval (webpack:///./cypress/e2e/TestPetStore.spec.cy.ts:321:30)",
                "diff": "- 200\n+ 400\n"
              },
              "uuid": "d822cc58-d244-46e6-890e-9e38fcdc7b30",
              "parentUUID": "8eab3d35-d071-4aa2-acc2-01b2bc1b7bcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f334ffa7-c9e0-4957-b248-68ea4641a1c4",
            "57343d7d-1e4e-4515-bc6a-821fbff4186f"
          ],
          "failures": [
            "84cee931-16f5-4ba7-aa7e-5a729e4a6632",
            "d822cc58-d244-46e6-890e-9e38fcdc7b30"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8045b81-a954-490f-a94a-43eb089855a4",
          "title": "testing pet store api / store",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test - check if user can place new order",
              "fullTitle": "testing pet store api / store test - check if user can place new order",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"POST\",\n    url: \"https://petstore.swagger.io/v2/store/order\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n    body: {\n        id: 7,\n        petId: 1111,\n        quantity: 1,\n        shipDate: \"2022-11-28T10:38:59.562Z\",\n        status: \"placed\",\n        complete: true,\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    expect(response.body.status).equal(\"placed\");\n});",
              "err": {},
              "uuid": "eaf177d3-0ead-4d51-8b94-e2e31e619114",
              "parentUUID": "e8045b81-a954-490f-a94a-43eb089855a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test - check open order",
              "fullTitle": "testing pet store api / store test - check open order",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"GET\",\n    url: \"https://petstore.swagger.io/v2/store/order/7\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    expect(response.body.status).equal(\"placed\");\n});",
              "err": {},
              "uuid": "d25bef63-0db4-4b19-a335-6e310766d80c",
              "parentUUID": "e8045b81-a954-490f-a94a-43eb089855a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "test - check delete order",
              "fullTitle": "testing pet store api / store test - check delete order",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n    method: \"DELETE\",\n    url: \"https://petstore.swagger.io/v2/store/order/7\",\n    headers: {\n        Authorisation: \"special-key\",\n    },\n}).then(function (response) {\n    expect(response.status).equal(200);\n    cy.request({\n        method: \"GET\",\n        url: \"https://petstore.swagger.io/v2/store/order/7\",\n        failOnStatusCode: false,\n        headers: {\n            Authorisation: \"special-key\",\n        },\n    }).then(function (response) {\n        expect(response.status).equal(404);\n        cy.log(response.body.message);\n    });\n});",
              "err": {},
              "uuid": "81a4ba43-8963-4a74-b13f-ad4bcea092c8",
              "parentUUID": "e8045b81-a954-490f-a94a-43eb089855a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaf177d3-0ead-4d51-8b94-e2e31e619114",
            "d25bef63-0db4-4b19-a335-6e310766d80c",
            "81a4ba43-8963-4a74-b13f-ad4bcea092c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 632,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}